{
	"info": {
		"_postman_id": "48204051-96d10898-652e-49e2-a92c-8870ae2e998b",
		"name": "PetSafe Cloud API",
		"description": "PetSafe authentication and device calls.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Request Login Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Received 200 from Cognito\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const data = pm.response.json();",
									"pm.environment.set(\"session\", data.Session || \"\");",
									"pm.environment.set(\"challenge_name\", data.ChallengeName || \"\");",
									"const username = (data.ChallengeParameters && data.ChallengeParameters.USERNAME) || pm.environment.get(\"email\");",
									"if (username) {",
									"    pm.environment.set(\"username\", username);",
									"}",
									"pm.environment.unset(\"id_token\");",
									"pm.environment.unset(\"access_token\");",
									"pm.environment.unset(\"refresh_token\");",
									"pm.environment.unset(\"token_received_at\");",
									"pm.environment.unset(\"token_expires_in\");",
									"pm.environment.unset(\"token_expires_at\");",
									"pm.environment.unset(\"token_expires_at_epoch\");",
									"if (data.ChallengeName) {",
									"    pm.test(\"Challenge is CUSTOM_CHALLENGE\", function () {",
									"        pm.expect(data.ChallengeName).to.eql(\"CUSTOM_CHALLENGE\");",
									"    });",
									"}"
								],
								"id": "c9a62637-add2-4d2f-9338-2c8aed3804d1"
							}
						}
					],
					"id": "48204051-5fe565cb-8b58-4efd-b780-313fa5272e88",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-amz-json-1.1"
							},
							{
								"key": "X-Amz-Target",
								"value": "AWSCognitoIdentityProviderService.InitiateAuth"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ClientId\": \"{{client_id}}\",\n  \"AuthFlow\": \"CUSTOM_AUTH\",\n  \"AuthParameters\": {\n    \"USERNAME\": \"{{email}}\",\n    \"AuthFlow\": \"CUSTOM_CHALLENGE\"\n  }\n}"
						},
						"url": {
							"raw": "{{cognito_base_url}}",
							"host": [
								"{{cognito_base_url}}"
							]
						},
						"description": "Request the one-time verification code via email."
					},
					"response": [
						{
							"id": "48204051-dfb68d78-1514-4cf7-8ca2-723e6490b40e",
							"name": "Request Login Code",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-amz-json-1.1"
									},
									{
										"key": "X-Amz-Target",
										"value": "AWSCognitoIdentityProviderService.InitiateAuth"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ClientId\": \"{{client_id}}\",\n  \"AuthFlow\": \"CUSTOM_AUTH\",\n  \"AuthParameters\": {\n    \"USERNAME\": \"{{email}}\",\n    \"AuthFlow\": \"CUSTOM_CHALLENGE\"\n  }\n}"
								},
								"url": {
									"raw": "{{cognito_base_url}}",
									"host": [
										"{{cognito_base_url}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"domain": "",
									"path": ""
								}
							],
							"responseTime": null,
							"body": "{\n    \"ChallengeName\": \"CUSTOM_CHALLENGE\",\n    \"ChallengeParameters\": {\n        \"USERNAME\": \"example-value\",\n        \"attempts\": \"1\"\n    },\n    \"Session\": \"sessionid\"\n}"
						}
					]
				},
				{
					"name": "Exchange Code for Tokens",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "059c8813-7ede-4538-94de-f704840bfc49",
								"exec": [
									"pm.test(\"Received tokens from Cognito\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const data = pm.response.json();",
									"if (!data.AuthenticationResult) {",
									"    throw new Error(\"AuthenticationResult missing from response.\");",
									"}",
									"const auth = data.AuthenticationResult;",
									"if (data.Session) {",
									"    pm.environment.set(\"session\", data.Session);",
									"}",
									"pm.environment.set(\"id_token\", auth.IdToken || \"\");",
									"pm.environment.set(\"access_token\", auth.AccessToken || \"\");",
									"if (auth.RefreshToken) {",
									"    pm.environment.set(\"refresh_token\", auth.RefreshToken);",
									"}",
									"pm.environment.set(\"token_received_at\", new Date().toISOString());",
									"if (auth.ExpiresIn) {",
									"    pm.environment.set(\"token_expires_in\", auth.ExpiresIn.toString());",
									"    const expiresAtMs = Date.now() + Number(auth.ExpiresIn) * 1000;",
									"    pm.environment.set(\"token_expires_at_epoch\", expiresAtMs.toString());",
									"    pm.environment.set(\"token_expires_at\", new Date(expiresAtMs).toISOString());",
									"}",
									"pm.test(\"id_token stored\", function () {",
									"    pm.expect(pm.environment.get(\"id_token\")).to.not.be.empty;",
									"});",
									"pm.test(\"refresh_token stored\", function () {",
									"    pm.expect(pm.environment.get(\"refresh_token\")).to.not.be.empty;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "48204051-265a9190-e853-4af5-b4c4-5687366ec590",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-amz-json-1.1"
							},
							{
								"key": "X-Amz-Target",
								"value": "AWSCognitoIdentityProviderService.RespondToAuthChallenge"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ClientId\": \"{{client_id}}\",\n  \"ChallengeName\": \"{{challenge_name}}\",\n  \"Session\": \"{{session}}\",\n  \"ChallengeResponses\": {\n    \"USERNAME\": \"{{username}}\",\n    \"ANSWER\": \"{{verification_code}}\"\n  }\n}"
						},
						"url": {
							"raw": "{{cognito_base_url}}",
							"host": [
								"{{cognito_base_url}}"
							]
						},
						"description": "Submit the verification code to receive id/access/refresh tokens."
					},
					"response": [
						{
							"id": "48204051-40449b50-cf41-4f17-b9b6-f4a53358471e",
							"name": "Exchange Code for Tokens",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-amz-json-1.1"
									},
									{
										"key": "X-Amz-Target",
										"value": "AWSCognitoIdentityProviderService.RespondToAuthChallenge"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ClientId\": \"{{client_id}}\",\n  \"ChallengeName\": \"{{challenge_name}}\",\n  \"Session\": \"{{session}}\",\n  \"ChallengeResponses\": {\n    \"USERNAME\": \"{{username}}\",\n    \"ANSWER\": \"{{verification_code}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{cognito_base_url}}",
									"host": [
										"{{cognito_base_url}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"domain": "",
									"path": ""
								}
							],
							"responseTime": null,
							"body": "{\n    \"AuthenticationResult\": {\n        \"AccessToken\": \"accesstoken\",\n        \"ExpiresIn\": 3600,\n        \"IdToken\": \"idtoken\",\n        \"RefreshToken\": \"refreshtoken\",\n        \"TokenType\": \"Bearer\"\n    },\n    \"ChallengeParameters\": {}\n}"
						}
					]
				},
				{
					"name": "Refresh Tokens",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Refresh succeeded\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const data = pm.response.json();",
									"if (!data.AuthenticationResult) {",
									"    throw new Error(\"AuthenticationResult missing from refresh response.\");",
									"}",
									"const auth = data.AuthenticationResult;",
									"pm.environment.set(\"id_token\", auth.IdToken || pm.environment.get(\"id_token\") || \"\");",
									"pm.environment.set(\"access_token\", auth.AccessToken || pm.environment.get(\"access_token\") || \"\");",
									"if (auth.RefreshToken) {",
									"    pm.environment.set(\"refresh_token\", auth.RefreshToken);",
									"}",
									"pm.environment.set(\"token_received_at\", new Date().toISOString());",
									"if (auth.ExpiresIn) {",
									"    pm.environment.set(\"token_expires_in\", auth.ExpiresIn.toString());",
									"    const expiresAtMs = Date.now() + Number(auth.ExpiresIn) * 1000;",
									"    pm.environment.set(\"token_expires_at_epoch\", expiresAtMs.toString());",
									"    pm.environment.set(\"token_expires_at\", new Date(expiresAtMs).toISOString());",
									"}",
									"if (data.Session) {",
									"    pm.environment.set(\"session\", data.Session);",
									"}"
								],
								"id": "e0888985-7f3b-4848-9002-987fd7fb8333"
							}
						}
					],
					"id": "48204051-e676112a-89f0-405c-a392-6770e9cadf6b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-amz-json-1.1"
							},
							{
								"key": "X-Amz-Target",
								"value": "AWSCognitoIdentityProviderService.InitiateAuth"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ClientId\": \"{{client_id}}\",\n  \"AuthFlow\": \"REFRESH_TOKEN_AUTH\",\n  \"AuthParameters\": {\n    \"REFRESH_TOKEN\": \"{{refresh_token}}\"\n  }\n}"
						},
						"url": {
							"raw": "{{cognito_base_url}}",
							"host": [
								"{{cognito_base_url}}"
							]
						},
						"description": "Use the stored refresh token to obtain a new id/access token pair."
					},
					"response": [
						{
							"id": "48204051-12ac76f4-ebe8-4a64-b11d-f9aebd55b243",
							"name": "Refresh Tokens",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-amz-json-1.1"
									},
									{
										"key": "X-Amz-Target",
										"value": "AWSCognitoIdentityProviderService.InitiateAuth"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ClientId\": \"{{client_id}}\",\n  \"AuthFlow\": \"REFRESH_TOKEN_AUTH\",\n  \"AuthParameters\": {\n    \"REFRESH_TOKEN\": \"{{refresh_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{cognito_base_url}}",
									"host": [
										"{{cognito_base_url}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"domain": "",
									"path": ""
								}
							],
							"responseTime": null,
							"body": "{\n    \"AuthenticationResult\": {\n        \"AccessToken\": \"accesstoken\",\n        \"ExpiresIn\": 3600,\n        \"IdToken\": \"idtoken\",\n        \"TokenType\": \"Bearer\"\n    },\n    \"ChallengeParameters\": {}\n}"
						}
					]
				}
			],
			"id": "48204051-f45a3be3-d07b-4d36-ac42-ac97f92ec247",
			"description": "Request login codes, exchange them for tokens, and refresh credentials via AWS Cognito.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "61be0ad7-92f6-4e98-9c34-4590b2f40871",
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4e9c2d51-ffa0-4c69-98bb-68467273a07b",
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Pet Feeders (Smart Feed)",
			"item": [
				{
					"name": "List Feeders",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Feeders fetched\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const feeders = pm.response.json();",
									"if (Array.isArray(feeders) && feeders.length > 0) {",
									"    const first = feeders[0];",
									"    if (first.thing_name) {",
									"        pm.environment.set(\"smartfeed_thing_name\", first.thing_name);",
									"    }",
									"    if (first.id) {",
									"        pm.environment.set(\"smartfeed_last_feeder_id\", first.id.toString());",
									"    }",
									"}"
								],
								"id": "ff84c29a-426e-4477-b37e-2d8e9e371517"
							}
						}
					],
					"id": "48204051-6556f1b8-238b-4f6a-81cb-63966f936d23",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{petsafe_base_url}}smart-feed/feeders",
							"host": [
								"{{petsafe_base_url}}smart-feed"
							],
							"path": [
								"feeders"
							]
						},
						"description": "Retrieve all Smart Feed devices linked to the account."
					},
					"response": []
				},
				{
					"name": "Get Feeder Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Feeder detail loaded\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const details = pm.response.json();",
									"if (details && details.thing_name) {",
									"    pm.environment.set(\"smartfeed_thing_name\", details.thing_name);",
									"}",
									"if (details && details.id) {",
									"    pm.environment.set(\"smartfeed_last_feeder_id\", details.id.toString());",
									"}"
								],
								"id": "ecc7e7e8-1032-4fbd-bd3e-0c435d791e23"
							}
						}
					],
					"id": "48204051-14d29c34-1381-4a39-b804-6fb738018970",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{petsafe_base_url}}smart-feed/feeders/{{smartfeed_thing_name}}/",
							"host": [
								"{{petsafe_base_url}}smart-feed"
							],
							"path": [
								"feeders",
								"{{smartfeed_thing_name}}",
								""
							]
						},
						"description": "Load the latest state for the selected Smart Feed (set smartfeed_thing_name first)."
					},
					"response": []
				},
				{
					"name": "Feed Now",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Feed request accepted\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"id": "d989ceee-2b2b-4d78-9f49-26390922b717"
							}
						}
					],
					"id": "48204051-2940c77b-e49e-4140-89c0-0e3ca2621b91",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": {{smartfeed_amount}},\n  \"slow_feed\": {{smartfeed_slow_feed}}\n}"
						},
						"url": {
							"raw": "{{petsafe_base_url}}smart-feed/feeders/{{smartfeed_thing_name}}/meals",
							"host": [
								"{{petsafe_base_url}}smart-feed"
							],
							"path": [
								"feeders",
								"{{smartfeed_thing_name}}",
								"meals"
							]
						},
						"description": "Dispense a meal immediately. amount is in 1/8 cup increments; set slow_feed to true to enable slow mode."
					},
					"response": []
				},
				{
					"name": "Get Feeder Messages",
					"id": "48204051-735ea598-0463-411a-b008-9416a90e4b1c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{petsafe_base_url}}smart-feed/feeders/{{smartfeed_thing_name}}/messages?days={{smartfeed_message_days}}",
							"host": [
								"{{petsafe_base_url}}smart-feed"
							],
							"path": [
								"feeders",
								"{{smartfeed_thing_name}}",
								"messages"
							],
							"query": [
								{
									"key": "days",
									"value": "{{smartfeed_message_days}}"
								}
							]
						},
						"description": "Pull recent messages from the feeder (defaults to the last 7 days)."
					},
					"response": []
				},
				{
					"name": "List Feeding Schedules",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Schedules fetched\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const schedules = pm.response.json();",
									"if (Array.isArray(schedules) && schedules.length > 0) {",
									"    const first = schedules[0];",
									"    if (first.id) {",
									"        pm.environment.set(\"smartfeed_schedule_id\", first.id.toString());",
									"    }",
									"}"
								],
								"id": "9ddc00a6-e14f-460e-bfcd-270b10a26578"
							}
						}
					],
					"id": "48204051-01d6327b-111e-4c62-9df6-0fabf7848eab",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{petsafe_base_url}}smart-feed/feeders/{{smartfeed_thing_name}}/schedules",
							"host": [
								"{{petsafe_base_url}}smart-feed"
							],
							"path": [
								"feeders",
								"{{smartfeed_thing_name}}",
								"schedules"
							]
						},
						"description": "Retrieve all scheduled feeds for the selected Smart Feed."
					},
					"response": []
				},
				{
					"name": "Create Feeding Schedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Schedule created\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});",
									"const created = pm.response.json();",
									"if (created && created.id) {",
									"    pm.environment.set(\"smartfeed_schedule_id\", created.id.toString());",
									"}"
								],
								"id": "bab92662-a40d-4ca6-801e-123e0119cc60"
							}
						}
					],
					"id": "48204051-c9e383ba-8e68-45a5-a199-dfb6af8b1a53",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"time\": \"{{smartfeed_schedule_time}}\",\n  \"amount\": {{smartfeed_schedule_amount}}\n}"
						},
						"url": {
							"raw": "{{petsafe_base_url}}smart-feed/feeders/{{smartfeed_thing_name}}/schedules",
							"host": [
								"{{petsafe_base_url}}smart-feed"
							],
							"path": [
								"feeders",
								"{{smartfeed_thing_name}}",
								"schedules"
							]
						},
						"description": "Create a new scheduled feed. Time must be 24-hour HH:MM."
					},
					"response": []
				},
				{
					"name": "Update Feeding Schedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Schedule updated\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"id": "c7ef5494-1a14-4790-9ba9-45899e29a04d"
							}
						}
					],
					"id": "48204051-3e6204b3-031c-4b1d-b163-f3f7861f7c22",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"time\": \"{{smartfeed_schedule_time}}\",\n  \"amount\": {{smartfeed_schedule_amount}}\n}"
						},
						"url": {
							"raw": "{{petsafe_base_url}}smart-feed/feeders/{{smartfeed_thing_name}}/schedules/{{smartfeed_schedule_id}}",
							"host": [
								"{{petsafe_base_url}}smart-feed"
							],
							"path": [
								"feeders",
								"{{smartfeed_thing_name}}",
								"schedules",
								"{{smartfeed_schedule_id}}"
							]
						},
						"description": "Update the selected scheduled feed."
					},
					"response": []
				},
				{
					"name": "Delete Feeding Schedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Schedule deleted\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"id": "75f7388c-4453-4bc2-ba01-5139f89ab2b7"
							}
						}
					],
					"id": "48204051-f4d23a5f-f548-4d10-809b-4be204006c79",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{petsafe_base_url}}smart-feed/feeders/{{smartfeed_thing_name}}/schedules/{{smartfeed_schedule_id}}",
							"host": [
								"{{petsafe_base_url}}smart-feed"
							],
							"path": [
								"feeders",
								"{{smartfeed_thing_name}}",
								"schedules",
								"{{smartfeed_schedule_id}}"
							]
						},
						"description": "Delete the specified scheduled feed."
					},
					"response": []
				},
				{
					"name": "Delete All Feeding Schedules",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"All schedules deleted\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"id": "c01a1202-7c91-48e3-a45f-4b712a8a4c67"
							}
						}
					],
					"id": "48204051-ada3c302-dabc-41b5-b6d5-6a4e467663ef",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{petsafe_base_url}}smart-feed/feeders/{{smartfeed_thing_name}}/schedules",
							"host": [
								"{{petsafe_base_url}}smart-feed"
							],
							"path": [
								"feeders",
								"{{smartfeed_thing_name}}",
								"schedules"
							]
						},
						"description": "Remove every scheduled feed from the selected Smart Feed."
					},
					"response": []
				},
				{
					"name": "Pause or Resume All Schedules",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Pause state updated\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"id": "a7d36b29-e5ae-48c1-ad4b-0713586193fe"
							}
						}
					],
					"id": "48204051-66167035-2f66-437c-add2-bed697908565",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"value\": {{smartfeed_pause_value}}\n}"
						},
						"url": {
							"raw": "{{petsafe_base_url}}smart-feed/feeders/{{smartfeed_thing_name}}/settings/paused",
							"host": [
								"{{petsafe_base_url}}smart-feed"
							],
							"path": [
								"feeders",
								"{{smartfeed_thing_name}}",
								"settings",
								"paused"
							]
						},
						"description": "Set the global paused flag for the feeder's schedules (true pauses, false resumes)."
					},
					"response": []
				},
				{
					"name": "Toggle Child Lock",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Child lock updated\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"id": "9df99b36-e2bf-4964-bfd0-5723e9d5721b"
							}
						}
					],
					"id": "48204051-0764ad26-98ab-431a-9893-48c2d48ca2c0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"value\": {{smartfeed_child_lock}}\n}"
						},
						"url": {
							"raw": "{{petsafe_base_url}}smart-feed/feeders/{{smartfeed_thing_name}}/settings/child_lock",
							"host": [
								"{{petsafe_base_url}}smart-feed"
							],
							"path": [
								"feeders",
								"{{smartfeed_thing_name}}",
								"settings",
								"child_lock"
							]
						},
						"description": "Enable or disable the physical button lock."
					},
					"response": []
				},
				{
					"name": "Toggle Slow Feed",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Slow feed updated\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"id": "d1e85147-38ed-43c0-8d8f-e1d494aeffa0"
							}
						}
					],
					"id": "48204051-bd18fdf8-e95d-4785-b32f-91447c73718c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"value\": {{smartfeed_slow_feed_setting}}\n}"
						},
						"url": {
							"raw": "{{petsafe_base_url}}smart-feed/feeders/{{smartfeed_thing_name}}/settings/slow_feed",
							"host": [
								"{{petsafe_base_url}}smart-feed"
							],
							"path": [
								"feeders",
								"{{smartfeed_thing_name}}",
								"settings",
								"slow_feed"
							]
						},
						"description": "Enable or disable the slow-feed mode."
					},
					"response": []
				}
			],
			"id": "48204051-798c543d-1b8c-4324-b3f9-c65a718542e9",
			"description": "Interact with Smart Feed devices using the Cognito id_token for Authorization.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const idToken = pm.environment.get(\"id_token\");",
							"if (!idToken) {",
							"    console.warn(\"id_token is missing. Run the authentication flow first.\");",
							"} else {",
							"    pm.request.headers.upsert({ key: \"Authorization\", value: idToken });",
							"}",
							"if (pm.request.body && pm.request.body.mode === \"raw\") {",
							"    pm.request.headers.upsert({ key: \"Content-Type\", value: \"application/json\" });",
							"}",
							"const expiresAtEpoch = parseInt(pm.environment.get(\"token_expires_at_epoch\") || \"0\", 10);",
							"if (expiresAtEpoch && Date.now() > expiresAtEpoch - 60000) {",
							"    console.warn(\"id_token is expired or will expire in <60s. Refresh tokens before continuing.\");",
							"}"
						],
						"id": "0f207b5a-ee04-47a9-9dd6-3c3a7a8fe4bd"
					}
				}
			]
		},
		{
			"name": "Litter Boxes (Scoopfree)",
			"item": [
				{
					"name": "List Litterboxes",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Litterboxes fetched\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const payload = pm.response.json();",
									"const boxes = Array.isArray(payload && payload.data) ? payload.data : (Array.isArray(payload) ? payload : []);",
									"if (Array.isArray(boxes) && boxes.length > 0) {",
									"    const first = boxes[0];",
									"    if (first.thingName) {",
									"        pm.environment.set(\"scoopfree_thing_name\", first.thingName);",
									"    }",
									"    if (first.productId) {",
									"        pm.environment.set(\"scoopfree_last_product_id\", first.productId.toString());",
									"    }",
									"}"
								],
								"id": "194a9821-3a4e-4fab-a559-e237f4646897"
							}
						}
					],
					"id": "48204051-eccb1672-b65e-48e2-aa19-4659e9938ec5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{petsafe_base_url}}scoopfree/product/product",
							"host": [
								"{{petsafe_base_url}}scoopfree"
							],
							"path": [
								"product",
								"product"
							]
						},
						"description": "List all connected ScoopFree litter boxes."
					},
					"response": []
				},
				{
					"name": "Get Litterbox Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Litterbox detail loaded\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const details = pm.response.json();",
									"if (details && details.thingName) {",
									"    pm.environment.set(\"scoopfree_thing_name\", details.thingName);",
									"}",
									"if (details && details.productId) {",
									"    pm.environment.set(\"scoopfree_last_product_id\", details.productId.toString());",
									"}"
								],
								"id": "defc9ee3-0f01-4dd2-9c91-b0b05c54fd3c"
							}
						}
					],
					"id": "48204051-09aea7f0-0d91-4df3-8b23-5221d6557a13",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{petsafe_base_url}}scoopfree/product/product/{{scoopfree_thing_name}}/",
							"host": [
								"{{petsafe_base_url}}scoopfree"
							],
							"path": [
								"product",
								"product",
								"{{scoopfree_thing_name}}",
								""
							]
						},
						"description": "Retrieve current state for the selected ScoopFree unit."
					},
					"response": []
				},
				{
					"name": "Trigger Rake Now",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Rake command accepted\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"id": "b68e7874-6891-42d5-b407-7ac6f64df78b"
							}
						}
					],
					"id": "48204051-bde2770e-6904-4fb8-b876-098963d530f0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{petsafe_base_url}}scoopfree/product/product/{{scoopfree_thing_name}}/rake-now",
							"host": [
								"{{petsafe_base_url}}scoopfree"
							],
							"path": [
								"product",
								"product",
								"{{scoopfree_thing_name}}",
								"rake-now"
							]
						},
						"description": "Start an immediate raking cycle."
					},
					"response": []
				},
				{
					"name": "Reset Rake Counter",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Rake count updated\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"id": "297b9a27-1e5f-47d0-ac24-69c0ec93a8c7"
							}
						}
					],
					"id": "48204051-8df033cc-e887-446f-b5c6-0538d99d8368",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"rakeCount\": {{scoopfree_rake_count}}\n}"
						},
						"url": {
							"raw": "{{petsafe_base_url}}scoopfree/product/product/{{scoopfree_thing_name}}/shadow",
							"host": [
								"{{petsafe_base_url}}scoopfree"
							],
							"path": [
								"product",
								"product",
								"{{scoopfree_thing_name}}",
								"shadow"
							]
						},
						"description": "Reset the rake counter to the provided value."
					},
					"response": []
				},
				{
					"name": "Set Rake Delay",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Rake delay updated\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"id": "e3ea4e11-38b8-4e1c-866f-d3f653a160f4"
							}
						}
					],
					"id": "48204051-dec2fbcf-6dfb-4b19-8b11-00022d52ce61",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"rakeDelayTime\": {{scoopfree_rake_delay}}\n}"
						},
						"url": {
							"raw": "{{petsafe_base_url}}scoopfree/product/product/{{scoopfree_thing_name}}/shadow",
							"host": [
								"{{petsafe_base_url}}scoopfree"
							],
							"path": [
								"product",
								"product",
								"{{scoopfree_thing_name}}",
								"shadow"
							]
						},
						"description": "Adjust the rake delay (minutes) for the ScoopFree unit."
					},
					"response": []
				},
				{
					"name": "Get Litterbox Activity",
					"id": "48204051-da88f6ec-1aea-4064-8734-40d1ab29250d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{petsafe_base_url}}scoopfree/product/product/{{scoopfree_thing_name}}/activity",
							"host": [
								"{{petsafe_base_url}}scoopfree"
							],
							"path": [
								"product",
								"product",
								"{{scoopfree_thing_name}}",
								"activity"
							]
						},
						"description": "Fetch the recent activity log for the litter box."
					},
					"response": []
				},
				{
					"name": "Update Litterbox Setting",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Setting updated\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"id": "ac6b956d-52a3-43b8-843d-748bb6ad4c63"
							}
						}
					],
					"id": "48204051-ac893d94-a308-4f84-ac5a-ed25361975a8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"{{scoopfree_setting_key}}\": {{scoopfree_setting_value}}\n}"
						},
						"url": {
							"raw": "{{petsafe_base_url}}scoopfree/product/product/{{scoopfree_thing_name}}/settings",
							"host": [
								"{{petsafe_base_url}}scoopfree"
							],
							"path": [
								"product",
								"product",
								"{{scoopfree_thing_name}}",
								"settings"
							]
						},
						"description": "Patch a single setting on the litter box. For string values, wrap the environment variable value in quotes manually before sending."
					},
					"response": []
				}
			],
			"id": "48204051-79afb2b7-9822-4729-b4b1-388825ca5b2a",
			"description": "Operate ScoopFree litter boxes using the Cognito id_token.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const idToken = pm.environment.get(\"id_token\");",
							"if (!idToken) {",
							"    console.warn(\"id_token is missing. Run the authentication flow first.\");",
							"} else {",
							"    pm.request.headers.upsert({ key: \"Authorization\", value: idToken });",
							"}",
							"if (pm.request.body && pm.request.body.mode === \"raw\") {",
							"    pm.request.headers.upsert({ key: \"Content-Type\", value: \"application/json\" });",
							"}",
							"const expiresAtEpoch = parseInt(pm.environment.get(\"token_expires_at_epoch\") || \"0\", 10);",
							"if (expiresAtEpoch && Date.now() > expiresAtEpoch - 60000) {",
							"    console.warn(\"id_token is expired or will expire in <60s. Refresh tokens before continuing.\");",
							"}"
						],
						"id": "26618f91-cb61-4b6a-9d7b-6b032389d97b"
					}
				}
			]
		},
		{
			"name": "SmartDoor",
			"item": [
				{
					"name": "List SmartDoors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "194a9821-3a4e-4fab-a559-e237f4646897",
								"exec": [
									"pm.test(\"Litterboxes fetched\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const payload = pm.response.json();",
									"const boxes = Array.isArray(payload && payload.data) ? payload.data : (Array.isArray(payload) ? payload : []);",
									"if (Array.isArray(boxes) && boxes.length > 0) {",
									"    const first = boxes[0];",
									"    if (first.thingName) {",
									"        pm.environment.set(\"smartdoor_thing_name\", first.thingName);",
									"    }",
									"    if (first.productId) {",
									"        pm.environment.set(\"smartdoor_last_product_id\", first.productId.toString());",
									"    }",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "48204051-e4b7b3ad-271a-427f-a8d2-24e2a7edc1d1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{petsafe_base_url}}smartdoor/product/product",
							"host": [
								"{{petsafe_base_url}}smartdoor"
							],
							"path": [
								"product",
								"product"
							]
						},
						"description": "List all connected ScoopFree litter boxes."
					},
					"response": [
						{
							"id": "48204051-4b8dd1f3-7a65-4798-924c-6467d06cb38e",
							"name": "List SmartDoors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{petsafe_base_url}}smartdoor/product/product",
									"host": [
										"{{petsafe_base_url}}smartdoor"
									],
									"path": [
										"product",
										"product"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "referrer-policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"data\": [\n        {\n            \"productType\": \"smartdoor\",\n            \"thingName\": \"example-value\",\n            \"schedules\": [\n                {\n                    \"thingName\": \"example-value\",\n                    \"petIds\": [\n                        \"example-value\",\n                        \"example-value\"\n                    ],\n                    \"scheduleId\": \"example-value\",\n                    \"startTime\": \"00:00\",\n                    \"access\": 3,\n                    \"dayOfWeek\": \"1111111\",\n                    \"scheduleType\": \"SMART\",\n                    \"isEnabled\": true,\n                    \"title\": \"Event\",\n                    \"nextActionAt\": 1759273200000,\n                    \"prevActionAt\": 1759186859000\n                },\n                {\n                    \"thingName\": \"example-value\",\n                    \"petIds\": [\n                        \"example-value\",\n                        \"example-value\",\n                        \"example-value\"\n                    ],\n                    \"scheduleId\": \"example-value\",\n                    \"startTime\": \"08:00\",\n                    \"access\": 3,\n                    \"dayOfWeek\": \"1111111\",\n                    \"scheduleType\": \"SMART\",\n                    \"isEnabled\": true,\n                    \"title\": \"Cats allowed out\",\n                    \"nextActionAt\": 1759302000000,\n                    \"prevActionAt\": 1759215659000\n                },\n                {\n                    \"thingName\": \"example-value\",\n                    \"petIds\": [\n                        \"example-value\",\n                        \"example-value\",\n                        \"example-value\"\n                    ],\n                    \"scheduleId\": \"example-value\",\n                    \"startTime\": \"19:30\",\n                    \"access\": 2,\n                    \"dayOfWeek\": \"1111111\",\n                    \"scheduleType\": \"SMART\",\n                    \"isEnabled\": true,\n                    \"title\": \"Cats in at night\",\n                    \"nextActionAt\": 1759257000000,\n                    \"prevActionAt\": 1759170659000\n                }\n            ],\n            \"shadow\": {\n                \"state\": {\n                    \"reported\": {\n                        \"productVariant\": \"MEDIUM\",\n                        \"connectionStatus\": \"online\",\n                        \"systemStatus\": {\n                            \"firmware\": \"v2.1.12\",\n                            \"rssi\": -46\n                        },\n                        \"door\": {\n                            \"mode\": \"MANUAL_UNLOCKED\",\n                            \"latchState\": \"UNLOCKED\",\n                            \"errorState\": \"NONE\"\n                        },\n                        \"power\": {\n                            \"hasAdapter\": true,\n                            \"batteryLevel\": 100,\n                            \"batteryVoltage\": 6347,\n                            \"finalAct\": \"UNLOCKED\"\n                        }\n                    },\n                    \"desired\": {\n                        \"power\": {\n                            \"thresholds\": [\n                                4500,\n                                4300,\n                                4150\n                            ],\n                            \"finalAct\": \"UNLOCKED\"\n                        }\n                    }\n                }\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get SmartDoor Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "defc9ee3-0f01-4dd2-9c91-b0b05c54fd3c",
								"exec": [
									"pm.test(\"Litterbox detail loaded\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const details = pm.response.json();",
									"if (details && details.thingName) {",
									"    pm.environment.set(\"smartdoor_thing_name\", details.thingName);",
									"}",
									"if (details && details.productId) {",
									"    pm.environment.set(\"smartdoor_last_product_id\", details.productId.toString());",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "48204051-7478570b-d23e-4445-922d-84c278e4295c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{petsafe_base_url}}smartdoor/product/product/{{smartdoor_thing_name}}/",
							"host": [
								"{{petsafe_base_url}}smartdoor"
							],
							"path": [
								"product",
								"product",
								"{{smartdoor_thing_name}}",
								""
							]
						},
						"description": "Retrieve current state for the selected ScoopFree unit."
					},
					"response": [
						{
							"id": "48204051-d4d822de-01ca-47df-9ae0-8d8d7d4077f0",
							"name": "Get Litterbox Details",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{petsafe_base_url}}smartdoor/product/product/{{smartdoor_thing_name}}/",
									"host": [
										"{{petsafe_base_url}}smartdoor"
									],
									"path": [
										"product",
										"product",
										"{{smartdoor_thing_name}}",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "referrer-policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"data\": {\n        \"productType\": \"smartdoor\",\n        \"thingName\": \"example-value\",\n        \"schedules\": [\n            {\n                \"thingName\": \"example-value\",\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"scheduleId\": \"example-value\",\n                \"startTime\": \"00:00\",\n                \"access\": 3,\n                \"dayOfWeek\": \"1111111\",\n                \"scheduleType\": \"SMART\",\n                \"isEnabled\": true,\n                \"title\": \"Event\",\n                \"nextActionAt\": 1759273200000,\n                \"prevActionAt\": 1759186859000\n            },\n            {\n                \"thingName\": \"example-value\",\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"scheduleId\": \"example-value\",\n                \"startTime\": \"08:00\",\n                \"access\": 3,\n                \"dayOfWeek\": \"1111111\",\n                \"scheduleType\": \"SMART\",\n                \"isEnabled\": true,\n                \"title\": \"Cats allowed out\",\n                \"nextActionAt\": 1759302000000,\n                \"prevActionAt\": 1759215659000\n            },\n            {\n                \"thingName\": \"example-value\",\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"scheduleId\": \"example-value\",\n                \"startTime\": \"19:30\",\n                \"access\": 2,\n                \"dayOfWeek\": \"1111111\",\n                \"scheduleType\": \"SMART\",\n                \"isEnabled\": true,\n                \"title\": \"Cats in at night\",\n                \"nextActionAt\": 1759257000000,\n                \"prevActionAt\": 1759170659000\n            }\n        ],\n        \"shadow\": {\n            \"state\": {\n                \"reported\": {\n                    \"productVariant\": \"MEDIUM\",\n                    \"connectionStatus\": \"online\",\n                    \"systemStatus\": {\n                        \"firmware\": \"v2.1.12\",\n                        \"rssi\": -46\n                    },\n                    \"door\": {\n                        \"mode\": \"MANUAL_UNLOCKED\",\n                        \"latchState\": \"UNLOCKED\",\n                        \"errorState\": \"NONE\"\n                    },\n                    \"power\": {\n                        \"hasAdapter\": true,\n                        \"batteryLevel\": 100,\n                        \"batteryVoltage\": 6347,\n                        \"finalAct\": \"UNLOCKED\"\n                    }\n                },\n                \"desired\": {\n                    \"power\": {\n                        \"thresholds\": [\n                            4500,\n                            4300,\n                            4150\n                        ],\n                        \"finalAct\": \"UNLOCKED\"\n                    }\n                }\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get SmartDoor Preferences",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "defc9ee3-0f01-4dd2-9c91-b0b05c54fd3c",
								"exec": [
									"pm.test(\"Litterbox detail loaded\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const details = pm.response.json();",
									"if (details && details.thingName) {",
									"    pm.environment.set(\"smartdoor_thing_name\", details.thingName);",
									"}",
									"if (details && details.productId) {",
									"    pm.environment.set(\"smartdoor_last_product_id\", details.productId.toString());",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"id": "48204051-b6ff939d-2e5e-4614-b6c1-21d2ba26878b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{petsafe_base_url}}preferences/product/smartdoor/{{smartdoor_thing_name}}/",
							"host": [
								"{{petsafe_base_url}}preferences"
							],
							"path": [
								"product",
								"smartdoor",
								"{{smartdoor_thing_name}}",
								""
							]
						},
						"description": "Retrieve current state for the selected ScoopFree unit."
					},
					"response": [
						{
							"id": "48204051-22d6dfcb-2ffa-4a55-851f-6980a71501a2",
							"name": "Get SmartDoor Preferences",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{petsafe_base_url}}smartdoor/product/product/{{smartdoor_thing_name}}/",
									"host": [
										"{{petsafe_base_url}}smartdoor"
									],
									"path": [
										"product",
										"product",
										"{{smartdoor_thing_name}}",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "referrer-policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"data\": {\n        \"thingName\": \"example-value\",\n        \"productType\": \"smartdoor\",\n        \"preferenceData\": {\n            \"friendlyName\": \"Pet door\",\n            \"tz\": \"Europe/London\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get SmartDoor Activity",
					"id": "48204051-ff390800-05c0-4e04-bb8a-c9d45440bf0c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{petsafe_base_url}}scoopfree/product/product/{{scoopfree_thing_name}}/activity",
							"host": [
								"{{petsafe_base_url}}scoopfree"
							],
							"path": [
								"product",
								"product",
								"{{scoopfree_thing_name}}",
								"activity"
							]
						},
						"description": "Fetch the recent activity log for the litter box."
					},
					"response": [
						{
							"id": "48204051-68ca3fc0-71b7-4432-a1af-f890a5ff02ac",
							"name": "Get Litterbox Activity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{petsafe_base_url}}smartdoor/product/product/{{smartdoor_thing_name}}/activity",
									"host": [
										"{{petsafe_base_url}}smartdoor"
									],
									"path": [
										"product",
										"product",
										"{{smartdoor_thing_name}}",
										"activity"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "referrer-policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"data\": [\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 2,\n                \"title\": \"Cats in at night\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-23T18:30:43.845Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 3,\n                \"title\": \"Event\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-23T23:00:44.608Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 3,\n                \"title\": \"Cats allowed out\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-24T07:00:45.043Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 2,\n                \"title\": \"Cats in at night\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-24T18:30:42.590Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 3,\n                \"title\": \"Event\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-24T23:00:44.092Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 3,\n                \"title\": \"Cats allowed out\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-25T07:00:45.198Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 2,\n                \"title\": \"Cats in at night\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-25T18:30:42.638Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 3,\n                \"title\": \"Event\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-25T23:00:45.330Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 3,\n                \"title\": \"Cats allowed out\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-26T07:00:44.687Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 2,\n                \"title\": \"Cats in at night\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-26T18:30:42.509Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 3,\n                \"title\": \"Event\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-26T23:00:44.281Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 3,\n                \"title\": \"Cats allowed out\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-27T07:00:44.257Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"USER_MODE_CHANGE_LOCKED\",\n            \"payload\": {\n                \"previousMode\": \"SMART\"\n            },\n            \"timestamp\": \"2025-09-27T16:15:37.044Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"USER_MODE_CHANGE_UNLOCKED\",\n            \"payload\": {\n                \"previousMode\": \"MANUAL_LOCKED\"\n            },\n            \"timestamp\": \"2025-09-27T16:15:41.110Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"CLOUD_MODE_CHANGE_SMART\",\n            \"payload\": {\n                \"previousMode\": \"MANUAL_UNLOCKED\"\n            },\n            \"timestamp\": \"2025-09-27T17:50:47.966Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 2,\n                \"title\": \"Cats in at night\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-27T18:30:42.681Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"PET_ENTERED\",\n            \"payload\": {\n                \"petId\": \"example-value\",\n                \"tagId\": \"example-value\",\n                \"groupId\": \"example-value\",\n                \"tagType\": \"FDXB\",\n                \"thingName\": \"example-value\",\n                \"rfId\": \"example-value\",\n                \"technology\": \"MICROCHIP\"\n            },\n            \"timestamp\": \"2025-09-27T22:03:01.190Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"ERROR_FLAP_STUCK\",\n            \"timestamp\": \"2025-09-27T22:03:05.359Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 3,\n                \"title\": \"Event\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-27T23:00:45.060Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 3,\n                \"title\": \"Cats allowed out\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-28T07:00:44.727Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"CLOUD_MODE_CHANGE_LOCKED\",\n            \"payload\": {\n                \"previousMode\": \"SMART\"\n            },\n            \"timestamp\": \"2025-09-28T08:16:20.645Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"CLOUD_MODE_CHANGE_UNLOCKED\",\n            \"payload\": {\n                \"previousMode\": \"MANUAL_LOCKED\"\n            },\n            \"timestamp\": \"2025-09-28T08:16:26.084Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"CLOUD_MODE_CHANGE_SMART\",\n            \"payload\": {\n                \"previousMode\": \"MANUAL_UNLOCKED\"\n            },\n            \"timestamp\": \"2025-09-28T20:40:27.637Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"CLOUD_MODE_CHANGE_SMART\",\n            \"payload\": {\n                \"previousMode\": \"MANUAL_UNLOCKED\"\n            },\n            \"timestamp\": \"2025-09-28T20:40:30.929Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"CLOUD_MODE_CHANGE_SMART\",\n            \"payload\": {\n                \"previousMode\": \"MANUAL_UNLOCKED\"\n            },\n            \"timestamp\": \"2025-09-28T20:40:31.136Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"CLOUD_MODE_CHANGE_SMART\",\n            \"payload\": {\n                \"previousMode\": \"SMART\"\n            },\n            \"timestamp\": \"2025-09-28T20:41:03.785Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"SCHEDULE_STARTED\",\n            \"payload\": {\n                \"petIds\": [\n                    \"example-value\",\n                    \"example-value\"\n                ],\n                \"access\": 3,\n                \"title\": \"Event\",\n                \"scheduleId\": \"example-value\"\n            },\n            \"timestamp\": \"2025-09-28T23:00:44.899Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"CLOUD_MODE_CHANGE_LOCKED\",\n            \"payload\": {\n                \"previousMode\": \"SMART\"\n            },\n            \"timestamp\": \"2025-09-29T06:04:12.706Z\"\n        },\n        {\n            \"thingName\": \"example-value\",\n            \"code\": \"CLOUD_MODE_CHANGE_UNLOCKED\",\n            \"payload\": {\n                \"previousMode\": \"MANUAL_LOCKED\"\n            },\n            \"timestamp\": \"2025-09-29T06:04:18.142Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Lock SmartDoor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac6b956d-52a3-43b8-843d-748bb6ad4c63",
								"exec": [
									"pm.test(\"Setting updated\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f36cbedc-aba5-4a29-8227-b9724db7a4eb",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"id": "48204051-260890da-9dc4-4af3-b6da-3fa812c92433",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"door\": {\n    \"mode\": \"MANUAL_LOCKED\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{petsafe_base_url}}smartdoor/product/product/{{smartdoor_thing_name}}/shadow",
							"host": [
								"{{petsafe_base_url}}smartdoor"
							],
							"path": [
								"product",
								"product",
								"{{smartdoor_thing_name}}",
								"shadow"
							]
						},
						"description": "Patch a single setting on the litter box. For string values, wrap the environment variable value in quotes manually before sending."
					},
					"response": [
						{
							"id": "48204051-2be66b6d-d659-46ca-9f71-bfac75c25d95",
							"name": "Lock SmartDoor",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"door\": {\n    \"mode\": \"MANUAL_LOCKED\"\n  }\n}"
								},
								"url": {
									"raw": "{{petsafe_base_url}}smartdoor/product/product/{{smartdoor_thing_name}}/shadow",
									"host": [
										"{{petsafe_base_url}}smartdoor"
									],
									"path": [
										"product",
										"product",
										"{{smartdoor_thing_name}}",
										"shadow"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "referrer-policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"data\": {\n        \"state\": {\n            \"reported\": {\n                \"productVariant\": \"MEDIUM\",\n                \"connectionStatus\": \"online\",\n                \"systemStatus\": {\n                    \"firmware\": \"v2.1.12\",\n                    \"rssi\": -46\n                },\n                \"door\": {\n                    \"mode\": \"MANUAL_UNLOCKED\",\n                    \"latchState\": \"UNLOCKED\",\n                    \"errorState\": \"NONE\"\n                },\n                \"power\": {\n                    \"hasAdapter\": true,\n                    \"batteryLevel\": 100,\n                    \"batteryVoltage\": 6345,\n                    \"finalAct\": \"UNLOCKED\"\n                }\n            },\n            \"desired\": {\n                \"door\": {\n                    \"mode\": \"MANUAL_LOCKED\"\n                },\n                \"power\": {\n                    \"thresholds\": [\n                        4500,\n                        4300,\n                        4150\n                    ],\n                    \"finalAct\": \"UNLOCKED\"\n                }\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Unlock SmartDoor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac6b956d-52a3-43b8-843d-748bb6ad4c63",
								"exec": [
									"pm.test(\"Setting updated\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f36cbedc-aba5-4a29-8227-b9724db7a4eb",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"id": "48204051-41cdad5e-a2c9-4820-bda1-cbf3b81df663",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"door\": {\n    \"mode\": \"MANUAL_UNLOCKED\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{petsafe_base_url}}smartdoor/product/product/{{smartdoor_thing_name}}/shadow",
							"host": [
								"{{petsafe_base_url}}smartdoor"
							],
							"path": [
								"product",
								"product",
								"{{smartdoor_thing_name}}",
								"shadow"
							]
						},
						"description": "Patch a single setting on the litter box. For string values, wrap the environment variable value in quotes manually before sending."
					},
					"response": [
						{
							"id": "48204051-d7caf383-a115-4f96-b03e-4d51dc52b4fc",
							"name": "Unlock SmartDoor",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"door\": {\n    \"mode\": \"MANUAL_UNLOCKED\"\n  }\n}"
								},
								"url": {
									"raw": "{{petsafe_base_url}}smartdoor/product/product/{{smartdoor_thing_name}}/shadow",
									"host": [
										"{{petsafe_base_url}}smartdoor"
									],
									"path": [
										"product",
										"product",
										"{{smartdoor_thing_name}}",
										"shadow"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "referrer-policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"data\": {\n        \"state\": {\n            \"reported\": {\n                \"productVariant\": \"MEDIUM\",\n                \"connectionStatus\": \"online\",\n                \"systemStatus\": {\n                    \"firmware\": \"v2.1.12\",\n                    \"rssi\": -45\n                },\n                \"door\": {\n                    \"mode\": \"MANUAL_LOCKED\",\n                    \"latchState\": \"LOCKED\",\n                    \"errorState\": \"NONE\"\n                },\n                \"power\": {\n                    \"hasAdapter\": true,\n                    \"batteryLevel\": 100,\n                    \"batteryVoltage\": 6345,\n                    \"finalAct\": \"UNLOCKED\"\n                }\n            },\n            \"desired\": {\n                \"door\": {\n                    \"mode\": \"MANUAL_UNLOCKED\"\n                },\n                \"power\": {\n                    \"thresholds\": [\n                        4500,\n                        4300,\n                        4150\n                    ],\n                    \"finalAct\": \"UNLOCKED\"\n                }\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "SmartDoor Smart mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac6b956d-52a3-43b8-843d-748bb6ad4c63",
								"exec": [
									"pm.test(\"Setting updated\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f36cbedc-aba5-4a29-8227-b9724db7a4eb",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"id": "48204051-65a1e490-1c59-435e-9f7c-8ebdfd07a643",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"door\": {\n    \"mode\": \"SMART\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{petsafe_base_url}}smartdoor/product/product/{{smartdoor_thing_name}}/shadow",
							"host": [
								"{{petsafe_base_url}}smartdoor"
							],
							"path": [
								"product",
								"product",
								"{{smartdoor_thing_name}}",
								"shadow"
							]
						},
						"description": "Patch a single setting on the litter box. For string values, wrap the environment variable value in quotes manually before sending."
					},
					"response": [
						{
							"id": "48204051-c7dd5df7-1408-4a08-9e2b-ff1a056334aa",
							"name": "Lock SmartDoor",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"door\": {\n    \"mode\": \"MANUAL_LOCKED\"\n  }\n}"
								},
								"url": {
									"raw": "{{petsafe_base_url}}smartdoor/product/product/{{smartdoor_thing_name}}/shadow",
									"host": [
										"{{petsafe_base_url}}smartdoor"
									],
									"path": [
										"product",
										"product",
										"{{smartdoor_thing_name}}",
										"shadow"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "referrer-policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"data\": {\n        \"state\": {\n            \"reported\": {\n                \"productVariant\": \"MEDIUM\",\n                \"connectionStatus\": \"online\",\n                \"systemStatus\": {\n                    \"firmware\": \"v2.1.12\",\n                    \"rssi\": -46\n                },\n                \"door\": {\n                    \"mode\": \"MANUAL_UNLOCKED\",\n                    \"latchState\": \"UNLOCKED\",\n                    \"errorState\": \"NONE\"\n                },\n                \"power\": {\n                    \"hasAdapter\": true,\n                    \"batteryLevel\": 100,\n                    \"batteryVoltage\": 6345,\n                    \"finalAct\": \"UNLOCKED\"\n                }\n            },\n            \"desired\": {\n                \"door\": {\n                    \"mode\": \"MANUAL_LOCKED\"\n                },\n                \"power\": {\n                    \"thresholds\": [\n                        4500,\n                        4300,\n                        4150\n                    ],\n                    \"finalAct\": \"UNLOCKED\"\n                }\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update Friendly Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac6b956d-52a3-43b8-843d-748bb6ad4c63",
								"exec": [
									"pm.test(\"Friendly name updated\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f36cbedc-aba5-4a29-8227-b9724db7a4eb",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"id": "48204051-a7415855-3e54-45b8-997e-03ea9257a49b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"friendlyName\": \"Pet door\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{petsafe_base_url}}preferences/product/smartdoor/{{smartdoor_thing_name}}",
							"host": [
								"{{petsafe_base_url}}preferences"
							],
							"path": [
								"product",
								"smartdoor",
								"{{smartdoor_thing_name}}"
							]
						},
						"description": "Patch a single setting on the litter box. For string values, wrap the environment variable value in quotes manually before sending."
					},
					"response": [
						{
							"id": "48204051-b11a19f4-9ef9-4c41-8a20-c3db96da7027",
							"name": "Update Friendly Name",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"friendlyName\": \"Pet door\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{petsafe_base_url}}preferences/product/smartdoor/{{smartdoor_thing_name}}",
									"host": [
										"{{petsafe_base_url}}preferences"
									],
									"path": [
										"product",
										"smartdoor",
										"{{smartdoor_thing_name}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 24 Oct 2025 21:58:56 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Content-Length",
									"value": "129"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "ef147455-d41c-4aec-a89f-969ef4420cf8"
								},
								{
									"key": "referrer-policy",
									"value": "no-referrer"
								},
								{
									"key": "x-dns-prefetch-control",
									"value": "on"
								},
								{
									"key": "x-amzn-Remapped-x-amzn-RequestId",
									"value": "b246f16c-a2a9-4fbc-8cbf-768c7d4527f2"
								},
								{
									"key": "x-permitted-cross-domain-policies",
									"value": "none"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "129"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "Via",
									"value": "1.1 359b6b96f5bc39c3c18c245a5430d31c.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "SzGUIKwI030IBx6AQ_-pUyd7GvNU7j53VQkxYXG_GrAJV3v3WXX8TQ=="
								},
								{
									"key": "x-amz-apigw-id",
									"value": "S-N5KHV3IAMEDbA="
								},
								{
									"key": "x-content-type-options",
									"value": "no-sniff"
								},
								{
									"key": "access-control-allow-methods",
									"value": "*"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-68fbf6a0-5b415e1b612a07713d23092b;Parent=3ea0570645fb139c;Sampled=0;Lineage=1:541899bc:0"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "IAD61-P2"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Fri, 24 Oct 2025 21:58:56 GMT"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"domain": "",
									"path": ""
								}
							],
							"responseTime": null,
							"body": "{\n    \"data\": {\n        \"thingName\": \"example-value\",\n        \"productType\": \"smartdoor\",\n        \"preferenceData\": {\n            \"friendlyName\": \"Pet door\",\n            \"tz\": \"Europe/London\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update Final Act",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac6b956d-52a3-43b8-843d-748bb6ad4c63",
								"exec": [
									"pm.test(\"Friendly name updated\", function () {",
									"    pm.expect(pm.response.code).to.be.within(200, 299);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f36cbedc-aba5-4a29-8227-b9724db7a4eb",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"id": "48204051-1dab28f5-0b3c-4fbf-978e-97f73f3d0570",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"power\": {\n        \"finalAct\": \"LOCKED\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{petsafe_base_url}}smartdoor/product/product/{{smartdoor_thing_name}}/shadow",
							"host": [
								"{{petsafe_base_url}}smartdoor"
							],
							"path": [
								"product",
								"product",
								"{{smartdoor_thing_name}}",
								"shadow"
							]
						},
						"description": "Patch a single setting on the litter box. For string values, wrap the environment variable value in quotes manually before sending."
					},
					"response": [
						{
							"id": "48204051-7e90a201-38f7-4f97-9b96-ec442d4fc55b",
							"name": "Update Friendly Name",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"friendlyName\": \"Pet door\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{petsafe_base_url}}preferences/product/smartdoor/{{smartdoor_thing_name}}",
									"host": [
										"{{petsafe_base_url}}preferences"
									],
									"path": [
										"product",
										"smartdoor",
										"{{smartdoor_thing_name}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 24 Oct 2025 21:58:56 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Content-Length",
									"value": "129"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "ef147455-d41c-4aec-a89f-969ef4420cf8"
								},
								{
									"key": "referrer-policy",
									"value": "no-referrer"
								},
								{
									"key": "x-dns-prefetch-control",
									"value": "on"
								},
								{
									"key": "x-amzn-Remapped-x-amzn-RequestId",
									"value": "b246f16c-a2a9-4fbc-8cbf-768c7d4527f2"
								},
								{
									"key": "x-permitted-cross-domain-policies",
									"value": "none"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "129"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "Via",
									"value": "1.1 359b6b96f5bc39c3c18c245a5430d31c.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "SzGUIKwI030IBx6AQ_-pUyd7GvNU7j53VQkxYXG_GrAJV3v3WXX8TQ=="
								},
								{
									"key": "x-amz-apigw-id",
									"value": "S-N5KHV3IAMEDbA="
								},
								{
									"key": "x-content-type-options",
									"value": "no-sniff"
								},
								{
									"key": "access-control-allow-methods",
									"value": "*"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-68fbf6a0-5b415e1b612a07713d23092b;Parent=3ea0570645fb139c;Sampled=0;Lineage=1:541899bc:0"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "IAD61-P2"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Fri, 24 Oct 2025 21:58:56 GMT"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"domain": "",
									"path": ""
								}
							],
							"responseTime": null,
							"body": "{\n    \"data\": {\n        \"thingName\": \"example-value\",\n        \"productType\": \"smartdoor\",\n        \"preferenceData\": {\n            \"friendlyName\": \"Pet door\",\n            \"tz\": \"Europe/London\"\n        }\n    }\n}"
						}
					]
				}
			],
			"id": "48204051-f4191ac9-a5bc-48ff-a2f1-3631f71044d9",
			"description": "Operate ScoopFree litter boxes using the Cognito id_token.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const idToken = pm.environment.get(\"id_token\");",
							"if (!idToken) {",
							"    console.warn(\"id_token is missing. Run the authentication flow first.\");",
							"} else {",
							"    pm.request.headers.upsert({ key: \"Authorization\", value: idToken });",
							"}",
							"if (pm.request.body && pm.request.body.mode === \"raw\") {",
							"    pm.request.headers.upsert({ key: \"Content-Type\", value: \"application/json\" });",
							"}",
							"const expiresAtEpoch = parseInt(pm.environment.get(\"token_expires_at_epoch\") || \"0\", 10);",
							"if (expiresAtEpoch && Date.now() > expiresAtEpoch - 60000) {",
							"    console.warn(\"id_token is expired or will expire in <60s. Refresh tokens before continuing.\");",
							"}"
						],
						"id": "26618f91-cb61-4b6a-9d7b-6b032389d97b"
					}
				}
			]
		},
		{
			"name": "Pets",
			"item": [
				{
					"name": "List Pets",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "194a9821-3a4e-4fab-a559-e237f4646897",
								"exec": [
									"pm.test(\"Pets fetched\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const payload = pm.response.json();\r",
									"const boxes = Array.isArray(payload && payload.data) ? payload.data : (Array.isArray(payload) ? payload : []);\r",
									"if (Array.isArray(boxes) && boxes.length > 0) {\r",
									"    const first = boxes[0];\r",
									"    if (first.petId) {\r",
									"        pm.environment.set(\"petId\", first.petId.toString());\r",
									"    }\r",
									"    if (first.profile.name) {\r",
									"        pm.environment.set(\"petName\", first.profile.name.toString());\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6620c47f-cf0e-4398-82e7-581c80a0434c",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"id": "48204051-551775eb-db91-4a79-8a35-d79b1c1bdd6c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{petsafe_base_url}}pets/pets",
							"host": [
								"{{petsafe_base_url}}pets"
							],
							"path": [
								"pets"
							]
						},
						"description": "List all connected ScoopFree litter boxes."
					},
					"response": [
						{
							"id": "48204051-c375479a-189a-405b-b1ed-44f54c1cc337",
							"name": "List Pets",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{petsafe_base_url}}pets/pets",
									"host": [
										"{{petsafe_base_url}}pets"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "referrer-policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"data\": [\n    {\n      \"deleted\": false,\n      \"updatedAt\": \"2025-09-14T16:32:19.810Z\",\n      \"petId\": \"example-value\",\n      \"profile\": {\n        \"birthday\": \"01/01/2024\",\n        \"unit\": \"metric\",\n        \"gender\": 0,\n        \"petType\": \"Cat\",\n        \"name\": \"Tailwag\",\n        \"weight\": 2.92,\n        \"breed\": []\n      },\n      \"createdAt\": \"2025-09-14T16:32:19.755Z\",\n      \"updatedBy\": \"example-value\",\n      \"createdBy\": \"example-value\",\n      \"technologies\": [\n        {\n          \"tagId\": \"example-value\",\n          \"technology\": \"MICROCHIP\",\n          \"frequency\": \"FDXB\"\n        }\n      ]\n    },\n    {\n      \"deleted\": false,\n      \"updatedAt\": \"2025-09-14T16:34:04.269Z\",\n      \"petId\": \"example-value\",\n      \"profile\": {\n        \"name\": \"Porko\",\n        \"birthday\": \"08/01/2001\",\n        \"gender\": 1,\n        \"breed\": [\n          \"Portuguese Poden\"\n        ],\n        \"petType\": \"Dog\"\n      },\n      \"createdAt\": \"2025-09-14T16:34:04.241Z\",\n      \"updatedBy\": \"example-value\",\n      \"createdBy\": \"example-value\",\n      \"technologies\": [\n        {\n          \"tagId\": \"example-value\",\n          \"technology\": \"PETSAFE_KEY\",\n          \"frequency\": \"FDXB\"\n        }\n      ]\n    },\n    {\n      \"deleted\": false,\n      \"updatedAt\": \"2025-09-14T16:31:19.390Z\",\n      \"petId\": \"example-value\",\n      \"profile\": {\n        \"birthday\": \"08/01/2021\",\n        \"unit\": \"metric\",\n        \"gender\": 0,\n        \"petType\": \"Cat\",\n        \"name\": \"Figwig\",\n        \"weight\": 4.19,\n        \"breed\": [\n          \"Siamese\"\n        ]\n      },\n      \"createdAt\": \"2025-09-14T16:31:19.298Z\",\n      \"updatedBy\": \"example-value\",\n      \"createdBy\": \"example-value\",\n      \"technologies\": [\n        {\n          \"tagId\": \"example-value\",\n          \"technology\": \"MICROCHIP\",\n          \"frequency\": \"FDXB\"\n        }\n      ]\n    },\n    {\n      \"deleted\": false,\n      \"updatedAt\": \"2025-09-14T16:33:09.350Z\",\n      \"petId\": \"example-value\",\n      \"profile\": {\n        \"birthday\": \"08/01/2021\",\n        \"unit\": \"metric\",\n        \"gender\": 0,\n        \"petType\": \"Dog\",\n        \"name\": \"Fofo\",\n        \"weight\": 12,\n        \"breed\": [\n          \"Other\"\n        ]\n      },\n      \"createdAt\": \"2025-09-14T16:33:09.304Z\",\n      \"updatedBy\": \"example-value\",\n      \"createdBy\": \"example-value\",\n      \"technologies\": [\n        {\n          \"tagId\": \"example-value\",\n          \"technology\": \"PETSAFE_KEY\",\n          \"frequency\": \"FDXB\"\n        }\n      ]\n    },\n    {\n      \"createdAt\": \"2025-09-14T16:30:33.870Z\",\n      \"createdBy\": \"example-value\",\n      \"deleted\": false,\n      \"petId\": \"example-value\",\n      \"profile\": {\n        \"birthday\": \"08/01/2021\",\n        \"unit\": \"metric\",\n        \"gender\": 0,\n        \"petType\": \"Cat\",\n        \"name\": \"Fluffy\",\n        \"weight\": 3.9,\n        \"breed\": [\n          \"Siamese\"\n        ]\n      },\n      \"updatedAt\": \"2025-09-14T16:30:34.015Z\",\n      \"updatedBy\": \"example-value\",\n      \"technologies\": [\n        {\n          \"tagId\": \"example-value\",\n          \"technology\": \"MICROCHIP\",\n          \"frequency\": \"FDXB\"\n        }\n      ]\n    }\n  ]\n}\n"
						}
					]
				},
				{
					"name": "List Pet Products",
					"id": "48204051-1bc713d7-ca90-40c0-9afe-2a354ebc3952",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{petsafe_base_url}}directory/petProduct?petId={{petId}}",
							"host": [
								"{{petsafe_base_url}}directory"
							],
							"path": [
								"petProduct"
							],
							"query": [
								{
									"key": "petId",
									"value": "{{petId}}"
								}
							]
						}
					},
					"response": [
						{
							"id": "48204051-d6874ce2-d9e1-41db-81cb-d0f3831debf2",
							"name": "List Pet Products",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{petsafe_base_url}}directory/petProduct?petId={{petId}}",
									"host": [
										"{{petsafe_base_url}}directory"
									],
									"path": [
										"petProduct"
									],
									"query": [
										{
											"key": "petId",
											"value": "{{petId}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "referrer-policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"data\": [\n    {\n      \"aws:rep:deleting\": false,\n      \"productType\": \"smartdoor_1_large\",\n      \"deleted\": false,\n      \"updatedAt\": \"2025-09-20T09:17:50.374Z\",\n      \"groupId\": \"example-value\",\n      \"petId\": \"example-value\",\n      \"createdAt\": \"2025-09-20T09:17:50.374Z\",\n      \"updatedBy\": \"example-value\",\n      \"aws:rep:updateregion\": \"us-east-1\",\n      \"aws:rep:updatetime\": 1758359870.623001,\n      \"createdBy\": \"example-value\",\n      \"productId\": \"example-value\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "48204051-ae30340f-954a-4e81-ac2f-b66557075523",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1e0cc385-e719-4da8-a1ec-b0384f70c349",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"const idToken = pm.environment.get(\"id_token\");\r",
							"if (!idToken) {\r",
							"    console.warn(\"id_token is missing. Run the authentication flow first.\");\r",
							"} else {\r",
							"    pm.request.headers.upsert({ key: \"Authorization\", value: idToken });\r",
							"}\r",
							"if (pm.request.body && pm.request.body.mode === \"raw\") {\r",
							"    pm.request.headers.upsert({ key: \"Content-Type\", value: \"application/json\" });\r",
							"}\r",
							"const expiresAtEpoch = parseInt(pm.environment.get(\"token_expires_at_epoch\") || \"0\", 10);\r",
							"if (expiresAtEpoch && Date.now() > expiresAtEpoch - 60000) {\r",
							"    console.warn(\"id_token is expired or will expire in <60s. Refresh tokens before continuing.\");\r",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ad6e493e-ccab-44f0-9783-5c7472d147fc",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "General",
			"item": [
				{
					"name": "Product Sharing",
					"id": "48204051-9f515155-8358-4883-a7cc-cf3b577a6420",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept-Encoding",
								"value": "gzip",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text"
							},
							{
								"key": "User-Agent",
								"value": "my PetSafe Code Version: 132 App Version: 1.19.1 Stage: Production Device: Google sdk_gphone64_x86_64 Android: Android SDK: 36 (16)",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{petsafe_base_url}}directory/product-sharing",
							"host": [
								"{{petsafe_base_url}}directory"
							],
							"path": [
								"product-sharing"
							]
						}
					},
					"response": [
						{
							"id": "48204051-cfc0d439-e110-447b-9ce3-d5a17df0a563",
							"name": "Product Sharing",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-Encoding",
										"value": "gzip",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache",
										"type": "text"
									},
									{
										"key": "User-Agent",
										"value": "my PetSafe Code Version: 132 App Version: 1.19.1 Stage: Production Device: Google sdk_gphone64_x86_64 Android: Android SDK: 36 (16)",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{petsafe_base_url}}directory/product-sharing",
									"host": [
										"{{petsafe_base_url}}directory"
									],
									"path": [
										"product-sharing"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "referrer-policy",
									"value": "no-referrer"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"domain": "",
									"path": ""
								}
							],
							"responseTime": null,
							"body": "{\n    \"data\": [\n        {\n            \"email\": \"example@example.com\",\n            \"ownerId\": \"example-value\",\n            \"userId\": \"example-value\",\n            \"nickname\": \"example@example.com\",\n            \"status\": \"shared\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"id": "48204051-c251a136-3d2a-4268-a8c4-efea796eb71c",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0e5dcdb5-f0a6-40bf-8fee-9623ad09864e",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"const idToken = pm.environment.get(\"id_token\");\r",
							"if (!idToken) {\r",
							"    console.warn(\"id_token is missing. Run the authentication flow first.\");\r",
							"} else {\r",
							"    pm.request.headers.upsert({ key: \"Authorization\", value: idToken });\r",
							"}\r",
							"if (pm.request.body && pm.request.body.mode === \"raw\") {\r",
							"    pm.request.headers.upsert({ key: \"Content-Type\", value: \"application/json\" });\r",
							"}\r",
							"const expiresAtEpoch = parseInt(pm.environment.get(\"token_expires_at_epoch\") || \"0\", 10);\r",
							"if (expiresAtEpoch && Date.now() > expiresAtEpoch - 60000) {\r",
							"    console.warn(\"id_token is expired or will expire in <60s. Refresh tokens before continuing.\");\r",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d36577a9-ca9f-40d1-857d-6539be431c5a",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "57632c05-3479-4d50-b501-4547be779ebf",
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "6f43077c-9ede-4076-a594-10a3624ea8c0",
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	]
}